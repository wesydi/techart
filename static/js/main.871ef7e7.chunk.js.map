{"version":3,"sources":["reducers/answersReducers.js","components/Input/Input.js","components/Main/Main.js","components/Button/Button.js","actions/answersActions.js","App.js","index.js"],"names":["answersReducers","state","answers","action","type","question","answer","Input","props","handleChangeInput","min","name","className","onChange","event","target","data-name","defaultProps","Main","currentQuestion","handleClick","summary","result","message","onClick","Number","getAttribute","currentTarget","Object","keys","map","key","data-value","index","length","Button","text","disabled","answersActions","dispatch","addAnswer","clearAnswers","questions","1","2","3","4","5","App","useState","currentMove","changeCurrentMove","indexQuestion","changeIndexQuestion","inputValues","changeInputValues","isLast","changeIsLast","changeResult","useEffect","a","axios","get","params","response","data","parent","tagName","forEach","clear","value","building","filledInputValues","filter","String","checkOnDisabled","connect","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"4PAiBeA,EAjBS,WAAsC,IAArCC,EAAoC,uDAA5B,CAAEC,QAAS,IAAMC,EAAW,uCAC3D,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BACFH,GADL,IAEEC,QAAQ,2BACHD,EAAMC,SADJ,kBAEJC,EAAOE,SAAWF,EAAOG,WAGhC,IAAK,gBACH,OAAO,2BAAKL,GAAZ,IAAmBC,QAAS,KAC9B,QACE,OAAOD,I,iDCTPM,G,YAAQ,SAACC,GAAW,IAEtBC,EACED,EADFC,kBAAmBL,EACjBI,EADiBJ,KAAMM,EACvBF,EADuBE,IAAKC,EAC5BH,EAD4BG,KAGhC,OACE,uBAAOC,UAAU,QAAQC,SAAU,SAACC,GAAD,OAAWL,EAAkBK,EAAMC,SAASX,KAAMA,EAAMM,IAAKA,EAAKM,YAAWL,MAIpHJ,EAAMU,aAAe,CACnBR,kBAAmB,aACnBL,KAAM,GACNM,IAAK,EACLC,KAAM,IAUOJ,QCvBTW,G,MAAO,SAACV,GAAW,IAErBW,EACEX,EADFW,gBAAiBjB,EACfM,EADeN,QAASkB,EACxBZ,EADwBY,YAAaX,EACrCD,EADqCC,kBAAmBY,EACxDb,EADwDa,QA6C5D,OACE,sBAAKT,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,sBAAMA,UAAU,aAAhB,SATAS,EACwB,OAAnBA,EAAQC,OAAkB,6CAAY,uCAExCH,EAAgBd,aAQrB,qBAAKO,UAAU,gBAAf,SA/CES,EAEA,sBAAMT,UAAS,qBAAmC,UAAnBS,EAAQC,OAAqB,mBAAqB,MAAjF,SAA0FD,EAAQE,UAGzE,SAAzBJ,EAAgBf,KAEhB,oBACEQ,UAAU,aACVY,QAAS,SAACV,GACRM,EAAYK,OAAOX,EAAMC,OAAOW,aAAa,eAAgBZ,EAAMa,gBAHvE,SAMGC,OAAOC,KAAK3B,GAAS4B,KAAI,SAACC,GAAD,OACxB,6BACE,sBAAMC,aAAYD,EAAKnB,UAAU,eAAjC,SAAiDV,EAAQ6B,MADlDA,QAOY,UAAzBZ,EAAgBf,KAEhB,qBAAKQ,UAAU,aAAf,SACGV,EAAQ4B,KAAI,SAACxB,EAAQ2B,GAAT,OACX,qCACE,cAAC,EAAD,CAAOxB,kBAAmBA,EAAmBE,KAAML,EAAQF,KAAK,SAASM,IAAK,GAAQJ,GACrF2B,IAAU/B,EAAQgC,OAAS,EAAI,sBAAMtB,UAAU,sBAAhB,eAAiD,kBAN3F,SAiCJM,EAAKD,aAAe,CAClBf,QAAS,GACTiB,gBAAiB,GACjBC,YAAa,aACbX,kBAAmB,aACnBY,QAAS,MAgBIH,QCjFTiB,G,MAAS,SAAC3B,GAAW,IACjB4B,EAAgC5B,EAAhC4B,KAAMhB,EAA0BZ,EAA1BY,YAAaiB,EAAa7B,EAAb6B,SAE3B,OACE,wBAAQjC,KAAK,SAASiC,SAAUA,EAAUb,QAASJ,EAAnD,SAAiEgB,MAIrED,EAAOlB,aAAe,CACpBmB,KAAM,GACNhB,YAAa,aACbiB,UAAU,GASGF,QCnBAG,EALQ,SAACC,GAAD,MAAe,CACpCC,UAAW,SAACnC,EAAUC,GAAX,OAAsBiC,EAAS,CAAEnC,KAAM,aAAcC,WAAUC,YAC1EmC,aAAc,kBAAMF,EAAS,CAAEnC,KAAM,qBCWjCsC,EAAY,CAChB,CACEtC,KAAM,OACNO,KAAM,WACNN,SAAU,gGACVH,QAAS,CACPyC,EAAG,oDACHC,EAAG,mCAGP,CACExC,KAAM,QACNO,KAAM,SACNN,SAAU,sIACVH,QAAS,CAAC,WAEZ,CACEE,KAAM,OACNO,KAAM,WACNN,SAAU,6EACVH,QAAS,CACPyC,EAAG,CAAEA,EAAG,uCAAUC,EAAG,yDAAaC,EAAG,yFACrCD,EAAG,CAAEA,EAAG,yDAAaE,EAAG,uCAAUC,EAAG,qFAGzC,CACE3C,KAAM,QACNO,KAAM,QACNN,SAAU,yGACVH,QAAS,CAAC,QAAS,WAIjB8C,EAAM,SAACxC,GAAW,IACdN,EAAsBM,EAAtBN,QAASqC,EAAa/B,EAAb+B,SADI,EAGoBU,mBAAS,GAH7B,mBAGdC,EAHc,KAGDC,EAHC,OAIwBF,mBAAS,GAJjC,mBAIdG,EAJc,KAICC,EAJD,OAKoBJ,mBAAS,IAL7B,mBAKdK,EALc,KAKDC,EALC,OAMUN,oBAAS,GANnB,mBAMdO,EANc,KAMNC,EANM,OAOUR,mBAAS,MAPnB,mBAOd3B,EAPc,KAONoC,EAPM,KASrBC,oBAAS,sBAAC,4BAAAC,EAAA,0DACJJ,EADI,0CAGmBK,IAAMC,IAAI,oCAAqC,CACpEC,OAAQ7D,IAJN,OAGE8D,EAHF,OAMJN,EAAaM,EAASC,MANlB,gDAQJP,EAAa,CAAEpC,OAAQ,QAASC,QAAS,iLARrC,yDAWP,CAACrB,EAASsD,IAEb,IAAMrC,EAAkBuB,EAAUU,GAQ5BhC,EAAc,SAACd,EAAQ4D,IACtB5D,GAA6B,WAAnB4D,EAAOC,WACC,WAAnBD,EAAOC,QACTvC,OAAOC,KAAKyB,GAAac,SAAQ,SAACrC,GAChCO,EAAeC,GAAUC,UAAUT,EAAKuB,EAAYvB,OAGtDO,EAAeC,GAAUC,UAAUrB,EAAgBR,KAAML,GAEvD8C,IAAkBV,EAAUR,OAAS,GAIzCiB,EAAkBD,EAAc,GACH,aAAzB/B,EAAgBR,MAAkC,IAAXL,GAI3C+C,EAAoBD,EAAgB,GACpCG,EAAkB,KAJhBF,EAAoBD,EAAgB,IALpCK,GAAa,KAgBXY,EAAQ,WACZ/B,EAAeC,GAAUE,eACzBU,EAAkB,GAClBE,EAAoB,GACpBE,EAAkB,IAClBE,GAAa,GACbC,EAAa,OAGf,OACE,sBAAK9C,UAAU,MAAf,UACE,gMACA,uBAAMA,UAAU,OAAhB,gCAA4BsC,KAC5B,cAAC,EAAD,CAAM7B,QAASC,EAAQb,kBAjBD,SAACM,GACzBwC,EAAkB,2BAAKD,GAAN,kBAAoBvC,EAAOW,aAAa,aAAeD,OAAOV,EAAOuD,WAgBvBlD,YAAaA,EAAaD,gBAAiBA,EAAiBjB,QAA2C,aAAlCwC,EAAUU,GAAezC,KAAsBQ,EAAgBjB,QAAQA,EAAQqE,UAAYpD,EAAgBjB,UAC7O,qBAAKU,UAAU,UAAf,SACGU,EAAS,cAAC,EAAD,CAAQc,KAAK,sEAAehB,YAAa,kBAAMiD,OACvD,qCACE,cAAC,EAAD,CAAQjD,YAAa,kBAAMiD,KAASjC,KAAK,yCACzC,cAAC,EAAD,CAAQhB,YAAa,SAACN,GAAD,OAAWM,EAAY,KAAMN,EAAMa,gBAAgBU,SAlD1D,WACtB,GAA6B,SAAzBlB,EAAgBf,KAAiB,OAAO,EAC5C,IAAMoE,EAAoB5C,OAAOC,KAAKyB,GAAamB,QAAO,SAAC1C,GAAD,OAAS2C,OAAOpB,EAAYvB,IAAQ,KAC9F,OAAOZ,EAAgBjB,QAAQgC,SAAWsC,EAAkBtC,OA+C8ByC,GAAmBvC,KAAMjB,IAAoBuB,EAAUA,EAAUR,OAAS,GAAK,yDAAc,4CAQ3Lc,EAAI/B,aAAe,CACjBf,QAAS,GACTqC,SAAU,cAQGqC,mBAjIS,SAAC3E,GAAD,MAAY,CAClCC,QAASD,EAAMC,WAgIF0E,CAAyB5B,GCnIlC6B,EAAQC,YAAY9E,GAE1B+E,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.871ef7e7.chunk.js","sourcesContent":["const answersReducers = (state = { answers: {} }, action) => {\n  switch (action.type) {\n    case 'ADD_ANSWER':\n      return {\n        ...state,\n        answers: {\n          ...state.answers,\n          [action.question]: action.answer,\n        },\n      };\n    case 'CLEAR_ANSWERS':\n      return { ...state, answers: {} };\n    default:\n      return state;\n  }\n};\n\nexport default answersReducers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Input.css';\n\nconst Input = (props) => {\n  const {\n    handleChangeInput, type, min, name,\n  } = props;\n\n  return (\n    <input className=\"input\" onChange={(event) => handleChangeInput(event.target)} type={type} min={min} data-name={name} />\n  );\n};\n\nInput.defaultProps = {\n  handleChangeInput: () => {},\n  type: '',\n  min: 0,\n  name: '',\n};\n\nInput.propTypes = {\n  handleChangeInput: PropTypes.func,\n  type: PropTypes.string,\n  min: PropTypes.number,\n  name: PropTypes.string,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../Input/Input';\nimport './Main.css';\n\nconst Main = (props) => {\n  const {\n    currentQuestion, answers, handleClick, handleChangeInput, summary,\n  } = props;\n  const render = () => {\n    if (summary) {\n      return (\n        <span className={`main__text ${summary.result === 'error' ? 'main__text_error' : null}`}>{summary.message}</span>\n      );\n    }\n    if (currentQuestion.type === 'list') {\n      return (\n        <ul\n          className=\"main__list\"\n          onClick={(event) => {\n            handleClick(Number(event.target.getAttribute('data-value')), event.currentTarget);\n          }}\n        >\n          {Object.keys(answers).map((key) => (\n            <li key={key}>\n              <span data-value={key} className=\"main__answer\">{answers[key]}</span>\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    if (currentQuestion.type === 'input') {\n      return (\n        <div className=\"inputBlock\">\n          {answers.map((answer, index) => (\n            <>\n              <Input handleChangeInput={handleChangeInput} name={answer} type=\"number\" min={1} key={answer} />\n              {index !== answers.length - 1 ? <span className=\"inputBlock__divider\">X</span> : null}\n            </>\n          ))}\n        </div>\n      );\n    }\n  };\n\n  const getHeaderText = () => {\n    if (summary) {\n      return summary.result === 'ok' ? 'Успешно' : 'Ошибка';\n    }\n    return currentQuestion.question;\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"main__header\">\n        <span className=\"main__text\">{getHeaderText()}</span>\n      </div>\n      <div className=\"main__answers\">\n        {render()}\n      </div>\n    </div>\n  );\n};\n\nMain.defaultProps = {\n  answers: [],\n  currentQuestion: {},\n  handleClick: () => {},\n  handleChangeInput: () => {},\n  summary: null,\n};\n\nMain.propTypes = {\n  answers: PropTypes.array || PropTypes.objectOf(PropTypes.object),\n  currentQuestion: PropTypes.shape({\n    type: PropTypes.string,\n    name: PropTypes.string,\n    question: PropTypes.string,\n    answers: PropTypes.array || PropTypes.objectOf(PropTypes.object),\n  }),\n  summary: PropTypes.object || PropTypes.instanceOf(null),\n  handleClick: PropTypes.func,\n  handleChangeInput: PropTypes.func,\n};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nconst Button = (props) => {\n  const { text, handleClick, disabled } = props;\n\n  return (\n    <button type=\"button\" disabled={disabled} onClick={handleClick}>{text}</button>\n  );\n};\n\nButton.defaultProps = {\n  text: '',\n  handleClick: () => {},\n  disabled: false,\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  handleClick: PropTypes.func,\n  disabled: PropTypes.bool,\n};\n\nexport default Button;\n","const answersActions = (dispatch) => ({\n  addAnswer: (question, answer) => dispatch({ type: 'ADD_ANSWER', question, answer }),\n  clearAnswers: () => dispatch({ type: 'CLEAR_ANSWERS' }),\n});\n\nexport default answersActions;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport Main from './components/Main/Main';\nimport Button from './components/Button/Button';\nimport answersActions from './actions/answersActions';\n\nconst mapStateToProps = (state) => ({\n  answers: state.answers,\n});\n\nconst questions = [\n  {\n    type: 'list',\n    name: 'building',\n    question: 'Что будем строить?',\n    answers: {\n      1: 'Жилой дом',\n      2: 'Гараж',\n    },\n  },\n  {\n    type: 'input',\n    name: 'height',\n    question: 'Количество этажей (число):',\n    answers: ['height'],\n  },\n  {\n    type: 'list',\n    name: 'material',\n    question: 'Материал стен:',\n    answers: {\n      1: { 1: 'Кирпич', 2: 'Шлакоблок', 3: 'Деревянный брус' },\n      2: { 2: 'Шлакоблок', 4: 'Металл', 5: 'Сендвич-панели' },\n    },\n  },\n  {\n    type: 'input',\n    name: 'sizes',\n    question: 'Длина стен (в метрах):',\n    answers: ['sizex', 'sizey'],\n  },\n];\n\nconst App = (props) => {\n  const { answers, dispatch } = props;\n\n  const [currentMove, changeCurrentMove] = useState(1);\n  const [indexQuestion, changeIndexQuestion] = useState(0);\n  const [inputValues, changeInputValues] = useState({});\n  const [isLast, changeIsLast] = useState(false);\n  const [result, changeResult] = useState(null);\n\n  useEffect(async () => {\n    if (isLast) {\n      try {\n        const response = await axios.get('https://data.techart.ru/lab/json/', {\n          params: answers,\n        });\n        changeResult(response.data);\n      } catch (error) {\n        changeResult({ result: 'error', message: 'Возникли проблемы с соединением.' });\n      }\n    }\n  }, [answers, isLast]);\n\n  const currentQuestion = questions[indexQuestion];\n\n  const checkOnDisabled = () => {\n    if (currentQuestion.type === 'list') return true;\n    const filledInputValues = Object.keys(inputValues).filter((key) => String(inputValues[key]) > 0);\n    return currentQuestion.answers.length !== filledInputValues.length;\n  };\n\n  const handleClick = (answer, parent) => {\n    if (!answer && parent.tagName !== 'BUTTON') return;\n    if (parent.tagName === 'BUTTON') {\n      Object.keys(inputValues).forEach((key) => {\n        answersActions(dispatch).addAnswer(key, inputValues[key]);\n      });\n    } else {\n      answersActions(dispatch).addAnswer(currentQuestion.name, answer);\n    }\n    if (indexQuestion === questions.length - 1) {\n      changeIsLast(true);\n      return;\n    }\n    changeCurrentMove(currentMove + 1);\n    if (currentQuestion.name === 'building' && answer === 2) {\n      changeIndexQuestion(indexQuestion + 2);\n      return;\n    }\n    changeIndexQuestion(indexQuestion + 1);\n    changeInputValues({});\n  };\n\n  const handleChangeInput = (target) => {\n    changeInputValues({ ...inputValues, [target.getAttribute('data-name')]: Number(target.value) });\n  };\n\n  const clear = () => {\n    answersActions(dispatch).clearAnswers();\n    changeCurrentMove(1);\n    changeIndexQuestion(0);\n    changeInputValues({});\n    changeIsLast(false);\n    changeResult(null);\n  };\n\n  return (\n    <div className=\"app\">\n      <h3>Калькулятор цены конструкций</h3>\n      <span className=\"move\">Шаг {currentMove}</span>\n      <Main summary={result} handleChangeInput={handleChangeInput} handleClick={handleClick} currentQuestion={currentQuestion} answers={questions[indexQuestion].name === 'material' ? currentQuestion.answers[answers.building] : currentQuestion.answers} />\n      <div className=\"buttons\">\n        {result ? <Button text=\"Новый расчет\" handleClick={() => clear()} /> : (\n          <>\n            <Button handleClick={() => clear()} text=\"Отмена\" />\n            <Button handleClick={(event) => handleClick(null, event.currentTarget)} disabled={checkOnDisabled()} text={currentQuestion === questions[questions.length - 1] ? 'Результат' : 'Далее'} />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nApp.defaultProps = {\n  answers: [],\n  dispatch: () => {},\n};\n\nApp.propTypes = {\n  answers: PropTypes.array || PropTypes.objectOf(PropTypes.object),\n  dispatch: PropTypes.func,\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport answersReducers from './reducers/answersReducers';\nimport App from './App';\n\nconst store = createStore(answersReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}